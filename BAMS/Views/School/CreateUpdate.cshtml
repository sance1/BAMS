@using BAMS.Data.Models;
@using EightElements.Services;

@inject ITextService PageText

@{
    var school = (School)ViewData["School"];
    var clientLanguage = (string) ViewBag.ClientLanguage;
    var title = school == null ? PageText.GetHtml("Create", clientLanguage) : PageText.GetHtml("Update", clientLanguage);
    long uid = school?.Uid ?? 0;

    var districtList = ViewData["DistrictList"] as List<District>;
    long districtUid = (long)ViewData["DistrictUid"];
}
@*School Page*@

<div class="col-3">
    <div class="card card-primary">
        <div class="card-header">
            <h3 class="card-title">@title @PageText.GetHtml("School", clientLanguage)</h3>
        </div>
        <div class="card-body">
            <input type="hidden" id="uid" value="@uid" />

            <div class="form-school">
                <div class="form-group">
                    <label>@PageText.GetHtml("District Name", clientLanguage)</label>
                    <select id="districtUid" class="form-control">
                        @foreach (var district in districtList)
                        {
                            if (district.Uid == districtUid)
                            {
                                <option selected value="@district.Uid">@district.Name</option>
                            }
                            else
                            {
                                <option value="@district.Uid">@district.Name</option>

                            }
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>@PageText.GetHtml("Name", clientLanguage) </label>
                    <input type="text" id="name" value="@school?.Name" class="form-control" />
                </div>
                <div class="form-group">
                    <label>@PageText.GetHtml("PIC", clientLanguage) </label>
                    <input type="text" id="pic" value="@school?.PIC" class="form-control" />
                </div>
                <div class="form-group">
                    <label>@PageText.GetHtml("Address", clientLanguage) </label>
                    <input type="text" id="address" value="@school?.Address" class="form-control" />
                </div>
                <div class="form-group">
                    <label>@PageText.GetHtml("Students", clientLanguage) </label>
                    <input type="text" id="students" value="@school?.Students" class="form-control" />
                </div>
                <div class="form-group">
                    <label>@PageText.GetHtml("Remark", clientLanguage) </label>
                    <input type="text" id="remarks" value="@school?.Remarks" class="form-control" />
                </div>

                <div class="form-group mt-3">
                    <button id="save" type="button" class="btn btn-primary">@PageText.GetHtml("Save", clientLanguage)</button>
                    <button type="button" class="btn btn-danger" onclick="goBack()">@PageText.GetHtml("Cancel", clientLanguage)</button>
                </div>
            </div>
        </div>
    </div>
</div>





@section Scripts{

    <script>

        $(document).ready(function () {

            $("#save").click(function() {

                let uid = parseInt($("#uid").val());

                let school = {
                    Uid: uid,
                    DistrictUid: parseInt($("#districtUid").val()),
                    Name: $("#name").val(),
                    Address: $("#address").val(),
                    PIC: $("#pic").val(),
                    Students: parseInt($("#students").val()),
                    Remarks: $("#remarks").val(),
                };

                let validationResult = validateInput(school);
                if (validationResult.length > 0) {
                    Swal.fire({
                        title: 'Error',
                        html: validationResult.join('<br>'),
                        icon: 'error'
                    });
                    return;
                }

                let url = uid == '0'
                    ? '@Url.Action("Create", "school")'
                    : '@Url.Action("Update", "school")';

                sendRequest(url, JSON.stringify(school))
            });
        });

        function validateInput(input) {
            let err = [];
            if(input.Name == ""){
                err.push("Name cannot empty");
            }
            if(input.PIC == ""){
                err.push("PIC cannot empty");
            }
            if(input.Students <= 0){
                err.push("Students cannot empty");
            }
            return err;
        }

        function sendRequest(url, payload) {
            $.ajax({
                type: "POST",
                url: url,
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                data: payload,
                success: function (response) {
                    if (response.status == 0) {
                        Swal.fire({
                            title: 'Success',
                            text: response.message,
                            icon: 'success'
                        }).then((result) => {
                            history.back();
                            location.href = "/School";
                        });

                    }


                },
                error: function(response){
                    Swal.fire({
                        title: 'Error',
                        text: response.message,
                        icon: 'error'
                    });
                }
            });
        }

        function goBack(){
            history.back();
        }

    </script>
}
