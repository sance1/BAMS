@using BAMS.Data.Models;
@{
    var student = (UserAccount)ViewData["Student"];
    var title = student == null ? "Create" : "Update";
    long uid = student?.Uid ?? 0;
}


<h2>@title school</h2>
<input type="hidden" id="uid" value="@uid" />

<div class="form-school col-3">

    <label>Class:</label>
    <input type="text" id="class" value="@student?.Class" class="form-control" />

    <label>Student name:</label>
    <input type="text" id="name" value="@student?.Name" class="form-control" />

    <label>Username:</label>
    <input type="text" id="username" value="@student?.UserName" class="form-control" />

    <label>Phone number:</label>
    <input type="text" id="phoneNumber" value="@student?.PhoneNumber" class="form-control" />

    <label>Email:</label>
    <input type="text" id="email" value="@student?.Email" class="form-control" />

    <div class="form-group mt-3">
        <button id="save" type="button" class="btn btn-primary">Save</button>
        <button type="button" class="btn btn-danger">Cancel</button>
    </div>

</div>




@section Scripts{

    <script>

        $(document).ready(function () {

            $("#save").click(function() {

                let uid = parseInt($("#uid").val());

                let student = {
                    uid: uid,
                    class: $("#class").val(),
                    name: $("#name").val(),
                    username: $("#username").val(),
                    phoneNumber: $("#phoneNumber").val(),
                    email: $("#email").val()
                };

                let validationResult = validateInput(student);
                if (validationResult.length > 0) {
                    Swal.fire({
                        title: 'Error',
                        html: validationResult.join('<br>'),
                        icon: 'error'
                    });
                    return;
                }

                let url = uid == '0'
                    ? '@Url.Action("Create", "Student")'
                    : '@Url.Action("Update", "Student")';

                sendRequest(url,  JSON.stringify(student))
            });
        });

        function validateInput(input) {
            let results = [];
            if(input.name == ""){
                results.push("Name cannot be empty");
            }
            if(input.username == ""){
                results.push("Username cannot be empty");
            }
            if(input.students == ""){
                results.push("Contact person cannot empty");
            }
            return results;
        }

        function sendRequest(url, payload) {
            $.ajax({
                type: 'POST',
                url: url,
                contentType: 'application/json; charset=utf-8',
                data: payload,
                success: function (response) {
                    if (response.status == 0) {
                        Swal.fire({
                            title: 'Success',
                            text: response.message,
                            icon: 'success'
                        }).then((result) => {
                            history.back();
                            location.href = "/School";
                        });
                    }
                },
                error: function(response){
                    Swal.fire({
                        title: 'Error',
                        text: response.message,
                        icon: 'error'
                    });
                }
            });
        }

        function testSave() {
            $.ajax({
                type: 'POST',
                url: "/school/Create",
                data: {Name:"sance"},
                success: function (respon) {
                    alert("ok");
                },
                error: function () { alert("Err TestSave.") }
            });
        }



    </script>
}
